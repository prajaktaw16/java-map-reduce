public static class Combine extends MapReduceBase implements Reducer<Text, Text, Text, Text> {    
public void reduce(Text key, Iterator<Text> values,OutputCollector<Text, Text> output,Reporter reporter) throws IOException {  
      double sum = 0;        int count = 0;       
 while (values.hasNext()) {           
	 String fields[] = values.next().toString().split(",");            
		sum += Double.parseDouble(fields[0]);            
		count += Integer.parseInt(fields[1]);       
    }        
output.collect(key, new Text(sum + "," + count));    
}}

public static class Reduce extends MapReduceBase    implements Reducer<Text, Text, Text, DoubleWritable> {    
public void reduce(Text key, Iterator<Text> values, OutputCollector<Text, DoubleWritable> output, Reporter reporter) throws IOException {       
 double sum = 0;        int count = 0;        
while (values.hasNext()) {           
 	String fields[] = values.next().toString().split(",");           
 	sum += Double.parseDouble(fields[0]);         
   	count += Integer.parseInt(fields[1]);        
}        
output.collect(key, new DoubleWritable(sum/count));   
 }}